import telebot
import threading
import subprocess
import time

bot = telebot.TeleBot('token')
bot.remove_webhook()
workList = []
redWorkList = []

def run_cmd_command(command):
    try:
        result = subprocess.run(command, shell=True, check=True,
                              stdout=subprocess.PIPE, stderr=subprocess.PIPE,
                              text=True)
        return result.stdout
    except subprocess.CalledProcessError as e:
        return f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e.stderr}"

def send_messages():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    while True:
        try:
            msg = run_cmd_command("main.py -c -")
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—â–µ–º—É —Å–ø–∏—Å–∫—É
            for user_id in workList:
                try:
                    bot.send_message(user_id, msg)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—â–µ–º—É —Å–ø–∏—Å–∫—É {user_id}: {e}")
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∏—Ö–æ–º—É —Å–ø–∏—Å–∫—É (—Ä–µ–∂–µ)
            if msg.find("DOWN")!=-1:
                for user_id in redWorkList:
                    try:
                        bot.send_message(user_id, msg)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–∏—Ö–æ–º—É —Å–ø–∏—Å–∫—É {user_id}: {e}")

        except Exception as e:
            print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        time.sleep(30)
@bot.message_handler(commands=['green'])
def get_text_messages(message):
    workList.append(message.from_user.id)
    try:
        redWorkList.remove(message.from_user.id)
    except Exception as e:
        pass
    bot.send_message(message.from_user.id,"–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
@bot.message_handler(commands=['red'])
def get_text_messages(message):
    redWorkList.append(message.from_user.id)
    try:
        workList.remove(message.from_user.id)
    except Exception as e:
        pass
    bot.send_message(message.from_user.id,"–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∏—Ö–∏–π —Å–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")

@bot.message_handler(commands=['red'])
def handle_red(message):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç–∏—Ö–∏–π —Å–ø–∏—Å–æ–∫"""
    user_id = message.from_user.id
    if user_id not in redWorkList:
        redWorkList.append(user_id)
    try:
        workList.remove(user_id)
    except ValueError:
        pass
    bot.send_message(user_id, "üîá –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∏—Ö–∏–π —Å–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Ä–µ–¥–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)")

@bot.message_handler(commands=['stop'])
def handle_stop(message):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –≤—Å–µ—Ö —Å–ø–∏—Å–∫–æ–≤"""
    user_id = message.from_user.id
    try:
        workList.remove(user_id)
    except ValueError:
        pass
    try:
        redWorkList.remove(user_id)
    except ValueError:
        pass
    bot.send_message(user_id, "‚èπ –í—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –≤—Å–µ—Ö —Å–ø–∏—Å–∫–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")

# –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
sender_thread = threading.Thread(target=send_messages)
sender_thread.daemon = True  # –î–µ–º–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø–æ—Ç–æ–∫, —á—Ç–æ–±—ã –æ–Ω –∑–∞–≤–µ—Ä—à–∞–ª—Å—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º
sender_thread.start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
bot.polling(none_stop=True, interval=0)
